# -*- yaml -*-
# https://github.com/sailuh/kaiaulu
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.

# Project Configuration File #
#
# To perform analysis on open source projects, you need to manually
# collect some information from the project's website. As there is
# no standardized website format, this file serves to distill
# important data source information so it can be reused by others
# and understood by Kaiaulu.
#
# Please check https://github.com/sailuh/kaiaulu/tree/master/conf to
# see if a project configuration file already exists. Otherwise, we
# would appreciate if you share your curated file with us by sending a
# Pull Request: https://github.com/sailuh/kaiaulu/pulls
#
# Note, you do NOT need to specify this entire file to conduct analysis.
# Each R Notebook uses a different portion of this file. To know what
# information is used, see the project configuration file section at
# the start of each R Notebook.
#
# Please comment unused parameters instead of deleting them for clarity.
# If you have questions, please open a discussion:
# https://github.com/sailuh/kaiaulu/discussions

project:
  website: http://www.inf.fu-berlin.de/lehre/WS99/java/JHotDraw5.1.tar.gz
  #openhub: https://www.openhub.net/p/jhotdraw

version_control:
  # Where is the git log located locally?
  # This is the path to the .git of the project repository you are analyzing.
  # The .git is hidden, so you can see it using `ls -a`

  # JHotDraw5.1 doesn't have git log, but still specify the git_log path on the config file, so the folder location can be extracted for the Notebook.

  log: ../../rawdata/git_repo/JHotDraw5.1/.git
  # From where the git log was downloaded?
  # log_url: jhotdraw5.1 doesn't have git log
  # List of branches used for analysis
  # branch:
  # - main

filter:
  keep_filepaths_ending_with:
    - cpp
    - c
    - h
    - java
    - js
    - py
    - cc
  remove_filepaths_containing:
  # excluding name of different samples
    - Net
    - Nothing
    - Pert
    - samples
    - java_code_examples

#mailing_list:
  # Where is the mbox located locally?
  # This project has no mbox
  # What is the domain of the chosen mailing list archive?
  # Which lists of the domain will be used?
#  list_key:
#    

#issue_tracker:
# This project has no issue tracker
#  jira:
    # Obtained from the project's JIRA URL
#    domain: 
    #project_key: 
    # Download using `download_jira_data.Rmd`
    #issues: 
    #issue_comments: 
#  github:
    # Obtained from the project's GitHub URL
#    owner: 
#    repo: 
    # Download using `download_github_comments.Rmd`
#    replies: 

#vulnerabilities:
  # Folder path with nvd cve feeds (e.g. nvdcve-1.1-2018.json)
  # Download at: 
  #nvd_feed: 

# Commit message CVE or Issue Regular Expression (regex)
# See project's commit message for examples to create the regex
#commit_message_id_regex:
#  issue_id: \#[0-9]+
  #cve_id: ?

tool:
  # Depends allow to parse file-file static dependencies.
  depends:
    # accepts one language at a time: cpp, java, ruby, python, pom
    # You can obtain this information on OpenHub or the project GiHub page right pane.
    code_language: java
    # Specify which types of Dependencies to keep - see the Depends tool README.md for details.
    keep_dependencies_type:
      - Cast
      - Call
      - Import
      - Return
      - Set
      - Use
      - Implement
      - ImplLink
      - Extend
      - Create
      - Throw
      - Parameter
      - Contain
  dv8:
    # The project folder path to store various intermediate
    # files for DV8 Analysis
    # The folder name will be used in the file names.
    folder_path: ../../analysis/dv8/jhotdraw
    # the architectural flaws thresholds that should be used
    architectural_flaws:
      cliqueDepends:
        - call
        - use
      crossingCochange: 2
      crossingFanIn: 4
      crossingFanOut: 4
      mvCochange: 2
      uiCochange: 2
      uihDepends:
        - call
        - use
      uihInheritance:
        - extend
        - implement
        - public
        - private
        - virtual
      uiHistoryImpact: 10
      uiStructImpact: 0.01
  # Uctags allows finer file-file dependency parsing (e.g. functions, classes, structs)
  uctags:
    # See https://github.com/sailuh/kaiaulu/wiki/Universal-Ctags for details
    # What types of file-file dependencies should be considered? If all
    # dependencies are specified, Kaiaulu will use all of them if available.
    keep_lines_type:
#      c:
#        - f # function definition
#      cpp:
#        - c # classes
#        - f # function definition
      java:
        - c # classes
#        - m # methods
#      python:
#        - c # classes
#        - f # functions
#      r:
#        - f # functions
  # srcML allow to parse src code as text (e.g. identifiers)
  srcml:
    # The file path to where you wish to store the srcml output of the project
    srcml_path: ../../analysis/jhotdraw/srcml_jhotdraw5.1.xml
  pattern4:
    class_folder_path: ../../rawdata/git_repo/draw/
    output_filepath: ../../analysis/pattern4/jhotdraw5.1_gof.xml
    compile_note: > 
      1. you will need to compile the project into class files by: find . -name "*.java" -exec javac {} \;
      2. Again,the path that you put in has to be exactly one level above all subdirectories that contain class files. e.g. /path/to/jhotdraw/JHotDraw5.1/sources/CH/ifa/draw/
      3. Run command: sudo java -Xms32m -Xmx512m -jar pattern4.jar -target "/path/to/jhotdraw/JHotDraw5.1/sources/CH/ifa/draw/" -output "jhot_output.xml"
# Analysis Configuration #
analysis:
  # A list of topic and keywords (see src_text_showcase.Rmd).
  topics:
    topic_1:
      - model
      - view
      - controller
    topic_2:
      - visitor
    topic_3:
      - observer
      - listener
    topic_4:
      - adapter
    topic_5:
      - decorator
    topic_6:
      - factory
      - builder
    topic_7:
      - facade
    topic_8:
      - strategy
    topic_9:
      - command

